// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pidzha.Domain.Data;

#nullable disable

namespace PidzhaWEB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231130162930_InicialCreate")]
    partial class InicialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pidzha.Domain.Discipline", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AcademicHours")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationalPlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Prerequisites")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("EducationalPlanName");

                    b.HasIndex("TeacherName");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("Pidzha.Domain.EducationalInstitution", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("EducationalInstitutions");
                });

            modelBuilder.Entity("Pidzha.Domain.EducationalPlan", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("EducationalInstitutionName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EducationalProgramName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("EducationalInstitutionName");

                    b.HasIndex("EducationalProgramName");

                    b.ToTable("EducationalPlans");
                });

            modelBuilder.Entity("Pidzha.Domain.EducationalProgram", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationalInstitutionName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("EducationalInstitutionName");

                    b.ToTable("EducationalPrograms");
                });

            modelBuilder.Entity("Pidzha.Domain.Student", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EducationalPlanName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("EducationalPlanName");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Pidzha.Domain.Teacher", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Pidzha.Domain.Discipline", b =>
                {
                    b.HasOne("Pidzha.Domain.EducationalPlan", "EducationalPlan")
                        .WithMany("Disciplines")
                        .HasForeignKey("EducationalPlanName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pidzha.Domain.Teacher", "Teacher")
                        .WithMany("TaughtDisciplines")
                        .HasForeignKey("TeacherName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationalPlan");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Pidzha.Domain.EducationalPlan", b =>
                {
                    b.HasOne("Pidzha.Domain.EducationalInstitution", null)
                        .WithMany("EducationalPlans")
                        .HasForeignKey("EducationalInstitutionName");

                    b.HasOne("Pidzha.Domain.EducationalProgram", "EducationalProgram")
                        .WithMany("EducationalPlans")
                        .HasForeignKey("EducationalProgramName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationalProgram");
                });

            modelBuilder.Entity("Pidzha.Domain.EducationalProgram", b =>
                {
                    b.HasOne("Pidzha.Domain.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionName");

                    b.Navigation("EducationalInstitution");
                });

            modelBuilder.Entity("Pidzha.Domain.Student", b =>
                {
                    b.HasOne("Pidzha.Domain.EducationalPlan", "EducationalPlan")
                        .WithMany("Students")
                        .HasForeignKey("EducationalPlanName");

                    b.Navigation("EducationalPlan");
                });

            modelBuilder.Entity("Pidzha.Domain.EducationalInstitution", b =>
                {
                    b.Navigation("EducationalPlans");
                });

            modelBuilder.Entity("Pidzha.Domain.EducationalPlan", b =>
                {
                    b.Navigation("Disciplines");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Pidzha.Domain.EducationalProgram", b =>
                {
                    b.Navigation("EducationalPlans");
                });

            modelBuilder.Entity("Pidzha.Domain.Teacher", b =>
                {
                    b.Navigation("TaughtDisciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
